@model IEnumerable<Domain.masa.Masa>

@{
    ViewData["Title"] = "View";
}

<h1 class="text-center mb-4">Masa Durumları</h1>

<p>
    <a class="btn btn-primary" asp-action="_Create">Yeni Masa Ekle</a>
</p>

<div class="row g-4">
    @foreach (var item in Model)
    {
        var masaClass = item.Durum ? "yesil" : "kirmizi";  // Durumuna göre renk sınıfı belirle
        <div class="col-md-3">
            <div class="card @masaClass shadow-sm rounded">
                <div class="card-body">
                    <h5 class="card-title">Masa No: @item.MasaNo</h5>
                    <p class="card-text">Kapasite: @item.Kapasite</p>
                    <div class="d-flex justify-content-between">
                        <div>
                            @Html.ActionLink("Düzenle", "_Edit", new { id = item.Id }, new { @class = "btn btn-warning btn-sm" }) |
                            @Html.ActionLink("Detaylar", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" }) |
                            @Html.ActionLink("Sil", "_Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" })
                        </div>
                    </div>
                     <div class="d-flex justify-content-between mt-3">
                        @if(masaClass == "yesil")
                        {
                            <button class="btn btn-light btn-sm siparis-ekle" data-id="@item.Id">Sipariş Ekle</button>
                        }
                        else
                        {
                            @Html.ActionLink("Ödeme Yap", "", new { id = item.Id }, new { @class = "btn btn-light btn-sm" })
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="pagination mt-4 d-flex justify-content-center">
    @if (ViewBag.CurrentPage > 1)
    {
        <a class="btn btn-light" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })">Önceki</a>
    }
    @for (int i = 1; i <= ViewBag.TotalPages; i++)
    {
        <a class="btn btn-light" href="@Url.Action("Index", new { page = i })">@i</a>
    }
    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
    {
        <a class="btn btn-light" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })">Sonraki</a>
    }
</div>

<div id="siparisModalContainer"></div>
<div id="musteriEkleModalContainer"></div>
 
<script>
    document.addEventListener("DOMContentLoaded", function() {

        const buttons = document.querySelectorAll(".siparis-ekle");

        buttons.forEach(button => {
            button.addEventListener("click", function() {
                const masaId = this.getAttribute("data-id");

                // Fetch API ile controller'a istek gönder
                fetch(`/Masa/_SiparisEkle/${masaId}`)
                    .then(response => response.text())
                    .then(data => {
                        // Partial view'i modala yerleştir
                        document.getElementById("siparisModalContainer").innerHTML = data;
                        // Modalı göster
                        const siparisModal = new bootstrap.Modal(document.getElementById("siparisModal"));
                        siparisModal.show();
                    })
                    .catch(error => {
                        alert("Bir hata oluştu!");
                    });
            });
        });
    });

    function renderCreateMusteriModal(){
        fetch(`/Masa/_MusteriEkle/`)
            .then(response => response.text())
            .then(data => {
                document.getElementById("musteriEkleModalContainer").innerHTML = data;
                const musteriModal = new bootstrap.Modal(document.getElementById("createMusteriModal"));
                musteriModal.show();
            })
            .catch(error => {
                alert("Bir hata oluştu!");
            });
    }
</script>

<style>
    /* Soft ve Gradyan Kırmızı */
    .kirmizi {
        background: linear-gradient(135deg, #ff7f7f, #f44336); /* Soft kırmızı ve gradyan */
        color: white;
        border-left: 5px solid #d32f2f;
        transition: all 0.3s ease;
    }

    /* Soft ve Gradyan Yeşil */
    .yesil {
        background: linear-gradient(135deg, #81c784, #4caf50); /* Soft yeşil ve gradyan */
        color: white;
        border-left: 5px solid #388e3c;
        transition: all 0.3s ease;
    }

    /* Kart Hover Etkisi */
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    /* Pagination Stili */
    .pagination .btn {
        margin: 0 5px;
    }

    /* Sayfa Başlığı */
    h1 {
        font-size: 2rem;
        font-weight: 600;
        color: #333;
    }

    /* Action Buttonları */
    .btn-sm {
        margin-right: 5px;
    }

    /* Kart Başlık ve Text Stili */
    .card-title {
        font-size: 1.2rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1rem;
    }
</style>
