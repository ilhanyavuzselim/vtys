// <auto-generated />
using System;
using Infrastructure.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RestorantDbContext))]
    [Migration("20241215092855_SiparisOdemeIdColumnFix")]
    partial class SiparisOdemeIdColumnFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.gider.Gider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Giderler");
                });

            modelBuilder.Entity("Domain.kategori.Kategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Domain.malzeme.Malzeme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TedarikciID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TedarikciID");

                    b.ToTable("Malzemeler");
                });

            modelBuilder.Entity("Domain.masa.Masa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<int>("Kapasite")
                        .HasColumnType("integer");

                    b.Property<int>("MasaNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Masalar");
                });

            modelBuilder.Entity("Domain.menu.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("numeric");

                    b.Property<Guid>("KategoriID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("KategoriID");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("Domain.musteri.Musteri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("Domain.odeme.Odeme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OdemeTuruID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SiparisID")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OdemeTuruID");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("Domain.odemeturu.OdemeTuru", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OdemeTurleri");
                });

            modelBuilder.Entity("Domain.personel.Personel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pozisyon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("Domain.rezervasyon.Rezervasyon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MasaID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MusteriID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RezervasyonTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MasaID");

                    b.HasIndex("MusteriID");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("Domain.siparis.Siparis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MasaID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MusteriID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OdemeID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PersonelID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MasaID");

                    b.HasIndex("MusteriID");

                    b.HasIndex("OdemeID")
                        .IsUnique();

                    b.HasIndex("PersonelID");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("Domain.siparisdetay.SiparisDetay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Adet")
                        .HasColumnType("integer");

                    b.Property<Guid>("MenuID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SiparisID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MenuID");

                    b.HasIndex("SiparisID");

                    b.ToTable("SiparisDetaylar");
                });

            modelBuilder.Entity("Domain.stok.Stok", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MalzemeID")
                        .HasColumnType("uuid");

                    b.Property<int>("Miktar")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeID");

                    b.ToTable("Stoklar");
                });

            modelBuilder.Entity("Domain.tedarikci.Tedarikci", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Iletisim")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tedarikciler");
                });

            modelBuilder.Entity("Domain.tedariksiparisi.TedarikSiparisi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("numeric");

                    b.Property<Guid>("MalzemeID")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("TedarikciID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeID");

                    b.HasIndex("TedarikciID");

                    b.ToTable("TedarikSiparisleri");
                });

            modelBuilder.Entity("Domain.malzeme.Malzeme", b =>
                {
                    b.HasOne("Domain.tedarikci.Tedarikci", "Tedarikci")
                        .WithMany()
                        .HasForeignKey("TedarikciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("Domain.menu.Menu", b =>
                {
                    b.HasOne("Domain.kategori.Kategori", "Kategori")
                        .WithMany("Menuler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Domain.odeme.Odeme", b =>
                {
                    b.HasOne("Domain.odemeturu.OdemeTuru", "OdemeTuru")
                        .WithMany()
                        .HasForeignKey("OdemeTuruID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OdemeTuru");
                });

            modelBuilder.Entity("Domain.rezervasyon.Rezervasyon", b =>
                {
                    b.HasOne("Domain.masa.Masa", "Masa")
                        .WithMany()
                        .HasForeignKey("MasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.musteri.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Domain.siparis.Siparis", b =>
                {
                    b.HasOne("Domain.masa.Masa", "Masa")
                        .WithMany()
                        .HasForeignKey("MasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.musteri.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriID");

                    b.HasOne("Domain.odeme.Odeme", "Odeme")
                        .WithOne("Siparis")
                        .HasForeignKey("Domain.siparis.Siparis", "OdemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.personel.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Musteri");

                    b.Navigation("Odeme");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Domain.siparisdetay.SiparisDetay", b =>
                {
                    b.HasOne("Domain.menu.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.siparis.Siparis", "Siparis")
                        .WithMany("SiparisDetaylar")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Domain.stok.Stok", b =>
                {
                    b.HasOne("Domain.malzeme.Malzeme", "Malzeme")
                        .WithMany()
                        .HasForeignKey("MalzemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Malzeme");
                });

            modelBuilder.Entity("Domain.tedariksiparisi.TedarikSiparisi", b =>
                {
                    b.HasOne("Domain.malzeme.Malzeme", "Malzeme")
                        .WithMany()
                        .HasForeignKey("MalzemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.tedarikci.Tedarikci", "Tedarikci")
                        .WithMany()
                        .HasForeignKey("TedarikciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Malzeme");

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("Domain.kategori.Kategori", b =>
                {
                    b.Navigation("Menuler");
                });

            modelBuilder.Entity("Domain.odeme.Odeme", b =>
                {
                    b.Navigation("Siparis")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.siparis.Siparis", b =>
                {
                    b.Navigation("SiparisDetaylar");
                });
#pragma warning restore 612, 618
        }
    }
}
